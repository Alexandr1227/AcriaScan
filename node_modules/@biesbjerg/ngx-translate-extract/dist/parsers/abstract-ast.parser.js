"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const typescript_1 = require("typescript");
class AbstractAstParser {
    createSourceFile(path, contents) {
        return typescript_1.createSourceFile(path, contents, null, false);
    }
    getStringLiterals(callNode) {
        if (!callNode.arguments.length) {
            return [];
        }
        const firstArg = callNode.arguments[0];
        return this.findNodes(firstArg, [
            typescript_1.SyntaxKind.StringLiteral,
            typescript_1.SyntaxKind.NoSubstitutionTemplateLiteral
        ])
            .map((node) => node.text);
    }
    findNodes(node, kinds) {
        const childrenNodes = node.getChildren(this.sourceFile);
        const initialValue = kinds.includes(node.kind) ? [node] : [];
        return childrenNodes.reduce((result, childNode) => {
            return result.concat(this.findNodes(childNode, kinds));
        }, initialValue);
    }
}
exports.AbstractAstParser = AbstractAstParser;
//# sourceMappingURL=abstract-ast.parser.js.map